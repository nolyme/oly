window.__DOCS__={"home":"<h1 align=\"center\">\n  O<em>L</em>Y\n</h1>\n\n<p align=\"center\">\no<em>l</em>y is a set of libraries to create well-written \n<a href=\"https://github.com/Microsoft/TypeScript\">TypeScript</a>\napplications with <a href=\"https://nodejs.org/en/\">Node.jsÂ®</a> and browsers.\n<br/>\n<small>\nThis set is based on popular projects, such as\n<a href=\"https://github.com/koajs/koa\">Koa</a> \nand\n<a href=\"https://github.com/facebook/react\">React</a>.\n</small>\n</p>\n\n<div align=\"center\">\n<a href=\"https://travis-ci.org/nolyme/oly\"><img src=\"https://travis-ci.org/nolyme/oly.svg?branch=master\" alt=\"travis\"/></a>\n<a href=\"https://codecov.io/gh/nolyme/oly\"><img src=\"https://codecov.io/gh/nolyme/oly/branch/master/graph/badge.svg\" alt=\"codecov\"/></a>\n</div>\n\n<hr />\n\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* store */</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* services &amp; providers */</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"getting-started\">Getting started</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right\"></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\"><a href=\"https://nolyme.github.io/oly/#/m/oly\">CORE</a></td>\n<td>Dependency injection, store and event emitter in one place.</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><a href=\"https://nolyme.github.io/oly/#/m/oly-api\">API</a></td>\n<td>REST API with koa and decorators.</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><a href=\"https://nolyme.github.io/oly/#/m/oly-react\">REACT</a></td>\n<td>React, SSR and Routing.</td>\n</tr>\n</tbody>\n</table>","modules":[{"version":"1.1.0","type":"universal","decorators":[{"path":"/kernel/decorators/env.ts","description":"<p>Get a value from the store. See Kernel#env().</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MY_ENV_KEY\"</span><span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"defaultValue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span></code></pre><p>This is <strong>readonly</strong>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>B<span class=\"token punctuation\">:</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// boom, can't write...</span></code></pre><p>An error will be thrown if no value was found.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// boom, missing env key...</span></code></pre><h3 id=\"syntactic-sugar\">Syntactic sugar</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// with @decorator</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// without @decorator</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\"> constructor</span><span class=\"token keyword\">(private</span> kernel<span class=\"token punctuation\">:</span> Kernel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  get <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>kernel<span class=\"token punctuation\">.</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> String<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"env","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> env <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/kernel/decorators/inject.ts","description":"<p>Inject a service. See Kernel#inject().</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span> <span class=\"token punctuation\">{</span>\n  c <span class=\"token operator\">=</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@inject</span> b<span class=\"token punctuation\">:</span> B<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token comment\">// \"d\"</span></code></pre><p>Type by argument.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@inject</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@inject</span><span class=\"token punctuation\">(</span>B2<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">:</span> B<span class=\"token punctuation\">;</span> <span class=\"token comment\">// this works too</span>\n<span class=\"token punctuation\">}</span></code></pre><h3 id=\"syntactic-sugar\">Syntactic sugar</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// with @decorator</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@inject</span> b<span class=\"token punctuation\">:</span> B<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// without @decorator</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\"> constructor</span><span class=\"token keyword\">(private</span> kernel<span class=\"token punctuation\">:</span> Kernel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  get <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>kernel<span class=\"token punctuation\">.</span><span class=\"token function\">inject</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"inject","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> inject <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/kernel/decorators/on.ts","description":"<p>Event listener decorator. See Kernel#on().</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@on</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// event name is optional, default = `${Class.name}.${propertyKey}`</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hey\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A.b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"stop-watching\">Stop watching</h3>\n<p>You don&#39;t need to free() events on services.\nLike events, services are stored in the kernel so when kernel dies, services die too then events are deleted.</p>\n<p>However, this is not the case with volatiles like React components, which are created / destroyed on the fly.\nTo handle this case, any class using @on will automatically implement IListener.\nThis interface gives the <code>__free__()</code> method, useful to remove events.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span> <span class=\"token annotation punctuation\">@on</span> <span class=\"token function-variable function\">b</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">\nconst</span> k <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nconst</span> a <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> as IListener<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nawait</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A.b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"ok\"</span>\na<span class=\"token punctuation\">.</span>__free__<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nawait</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A.b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ...</span></code></pre><h3 id=\"syntactic-sugar\">Syntactic sugar</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// with @decorator</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// without @decorator</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\"> constructor</span><span class=\"token keyword\">(private</span> kernel<span class=\"token punctuation\">:</span> Kernel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> const</span> ev <span class=\"token operator\">=</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>kernel<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> args <span class=\"token operator\">=></span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>kernel<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>args<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>__free__ <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>free<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"on","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> on <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/kernel/decorators/state.ts","description":"<p>Get&#39;n&#39;Set a value from the store. See Kernel#state().</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@state</span> data<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// state name is optional, default = `${Class.name}.${propertyKey}`</span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"A.data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello\"</span> <span class=\"token comment\">// key,value</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hello\"</span></code></pre><h3 id=\"event\">Event</h3>\n<p>Each &quot;mutation&quot; will emit <code>oly:state:mutate</code>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Engine</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@state</span> started <span class=\"token operator\">=</span><span class=\"token keyword\"> false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">active</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>started <span class=\"token operator\">=</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"oly:state:mutate\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">.</span>oldValue<span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">.</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span>kernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Engine<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">active</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"syntactic-sugar\">Syntactic sugar</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// with @decorator</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// without @decorator</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\"> constructor</span><span class=\"token keyword\">(private</span> kernel<span class=\"token punctuation\">:</span> Kernel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  get <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>kernel<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n <span class=\"token keyword\"> set</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>kernel<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"state","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> state <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]}],"interfaces":[],"components":[],"exceptions":[{"path":"/exception/Exception.ts","description":"<p>Enhancement of Error with support ES5 and ES6.</p>\n<h3 id=\"exception-tojson\">Exception#toJSON</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> JSON<span class=\"token punctuation\">.</span>stringify<span class=\"token keyword\">(new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"{\\\"message\\\": \\\"A\\\", \\\"name\\\": \"Exception\\\"}\"</span></code></pre><h3 id=\"cause\">Cause</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> boom <span class=\"token operator\">=</span><span class=\"token keyword\"> async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\"> try</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> try</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\"> throw</span><span class=\"token keyword\"> new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\"> catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\"> throw</span><span class=\"token keyword\"> new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token keyword\"> catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> throw</span><span class=\"token keyword\"> new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">boom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Exception: C. Caused by: Exception: B. Caused by: Error: A</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>cause<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Exception: B. Caused by: Error: A</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>cause<span class=\"token punctuation\">.</span>cause<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Error: A</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getLongStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"default-message\">Default Message</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyException</span><span class=\"token keyword\"> extends</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n   message <span class=\"token operator\">=</span> <span class=\"token string\">\"My default message\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nnew</span> <span class=\"token class-name\">MyException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">\nnew</span> <span class=\"token class-name\">MyException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"override default message\"</span><span class=\"token punctuation\">)</span></code></pre><h3 id=\"inheritance\">Inheritance</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyException</span><span class=\"token keyword\"> extends</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nnew</span> <span class=\"token class-name\">MyException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name <span class=\"token comment\">// \"MyException\"</span>\n<span class=\"token keyword\">\ntry</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\"> throw</span><span class=\"token keyword\"> new</span> <span class=\"token class-name\">MyException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\"> catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token keyword\"> instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// true</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token keyword\"> instanceof</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// true</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token keyword\"> instanceof</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// true</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token keyword\"> instanceof</span> <span class=\"token class-name\">MyException</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token keyword\"> instanceof</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// false</span>\n<span class=\"token punctuation\">}</span></code></pre>","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Exception <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"Exception"}],"manuals":[{"path":"docs/Debug.md","name":"Debug","content":"<h1 id=\"debug\">Debug</h1>\n<h2 id=\"console\">Console</h2>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel<span class=\"token punctuation\">,</span> Global <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=></span> Global<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kernel\"</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// now Kernel is accessible to</span>\n<span class=\"token comment\">// browser: window.oly.kernel</span>\n<span class=\"token comment\">// nodejs: global.oly.kernel</span></code></pre>"},{"path":"docs/Providers.md","name":"Providers","content":"<h1 id=\"providers\">Providers</h1>\n<h2 id=\"implicit\">Implicit</h2>\n<p>Example: database connection.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> env<span class=\"token punctuation\">,</span> inject<span class=\"token punctuation\">,</span> IProvider<span class=\"token punctuation\">,</span> Kernel<span class=\"token punctuation\">,</span> state <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> createConnection<span class=\"token punctuation\">,</span> Connection <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"superdblib\"</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">DatabaseProvider</span><span class=\"token keyword\"> implements</span> <span class=\"token class-name\">IProvider</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DB_URL\"</span><span class=\"token punctuation\">)</span> url<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@state</span> conn<span class=\"token punctuation\">:</span> Connection<span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\"> async</span> <span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>conn <span class=\"token operator\">=</span><span class=\"token keyword\"> await</span> createConnection<span class=\"token keyword\">(this</span><span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Repository</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@inject</span> db<span class=\"token punctuation\">:</span> DatabaseProvider<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>DB_URL<span class=\"token punctuation\">:</span> <span class=\"token string\">\"postgres://localhost/test\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Repository<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Repository --> DatabaseProvider</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Repository<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"explicit\">Explicit</h2>\n<p>Example: http server.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> env<span class=\"token punctuation\">,</span> IDeclarations<span class=\"token punctuation\">,</span> Kernel<span class=\"token punctuation\">,</span> Meta<span class=\"token punctuation\">,</span> state <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> App <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"superhttpserver\"</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">ServerProvider</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SERVER_PORT\"</span><span class=\"token punctuation\">)</span> port<span class=\"token punctuation\">:</span><span class=\"token keyword\"> number</span><span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@state</span> app<span class=\"token punctuation\">:</span><span class=\"token keyword\"> any</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\"> async</span> <span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span>declarations<span class=\"token punctuation\">:</span> IDeclarations<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>app <span class=\"token operator\">=</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\"> for</span> <span class=\"token keyword\">(const</span> <span class=\"token punctuation\">{</span>definition<span class=\"token punctuation\">:</span> target<span class=\"token punctuation\">}</span> of declarations<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\"> const</span> routes <span class=\"token operator\">=</span> Meta<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"routes\"</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\"> if</span> <span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\"> await</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>listen<span class=\"token keyword\">(this</span><span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Controller</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>SERVER_PORT<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Controller<span class=\"token punctuation\">,</span> ServerProvider<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Controller &lt;-?-> ServerProvider</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>"}],"env":[{"default":"\"App\"","description":"<p>Application&#39;s name. <em>(Api, Worker, Service-a1, ...)</em></p>","name":"APP_NAME","optional":true,"target":"Logger","type":"string"},{"default":"true","description":"<p>Enable or disable ANSI/CSS color.</p>","name":"LOGGER_COLOR","optional":true,"target":"Logger","type":"boolean"},{"default":"\"INFO\"","description":"<p>Log level inside the app. <br/>\nTRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR</p>","name":"LOGGER_LEVEL","optional":true,"target":"Logger","type":"string"}],"home":"<h1 id=\"oly\">o<em>l</em>y</h1>\n<p>Dependency injection, store and event emitter in one place.</p>\n<p>o<em>l</em>y is a module of the <a href=\"https://nolyme.github.io/oly\">o<em>l</em>y project</a>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* store */</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* services &amp; providers */</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span></code></pre><h2 id=\"installation\">Installation</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> oly</code></pre><h2 id=\"features\">Features</h2>\n<h3 id=\"injections\">Injections</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> inject<span class=\"token punctuation\">,</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span> text <span class=\"token operator\">=</span> <span class=\"token string\">\"A\"</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">B</span> <span class=\"token punctuation\">{</span> text <span class=\"token operator\">=</span> <span class=\"token string\">\"B\"</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">C</span> <span class=\"token punctuation\">{</span> <span class=\"token annotation punctuation\">@inject</span> a<span class=\"token punctuation\">:</span> A <span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>provide<span class=\"token punctuation\">:</span> A<span class=\"token punctuation\">,</span> use<span class=\"token punctuation\">:</span> B<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>text <span class=\"token comment\">// B</span></code></pre><h3 id=\"events\">Events</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel<span class=\"token punctuation\">,</span> on <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@on</span> <span class=\"token function-variable function\">say</span> <span class=\"token operator\">=</span> msg <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"App.say\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// hello</span></code></pre><h3 id=\"states\">States</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>A<span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"oly:state:mutate\"</span><span class=\"token punctuation\">,</span> console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span>kernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { key: 'A', newValue: 'C', oldValue: 'B' }</span></code></pre>","name":"oly","services":[{"path":"/kernel/Kernel.ts","description":"<pre class=\"language-ts\"><code class=\"language-ts\">Kernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>definitions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span></code></pre><p>Decorators:</p>\n<ul>\n<li>@inject -&gt; Kernel#inject()</li>\n<li>@state -&gt; Kernel#state()</li>\n<li>@env -&gt; Kernel#env()</li>\n<li>@on -&gt; Kernel#on()</li>\n</ul>","methods":[{"description":"<p>Fluent configuration.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">Kernel\n <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=></span> k<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">andDoSomething</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>","name":"configure","parameters":[{"description":"<p>Function to execute</p>","name":"configuration","optional":false,"type":"function"}],"returnDescription":"<p>Kernel instance</p>","returnType":"this","static":false,"accessor":false},{"description":"<p>Fire an event.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">kernel<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my:event\"</span><span class=\"token punctuation\">,</span> console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nkernel<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my:event\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>some<span class=\"token punctuation\">:</span> <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>This is asynchronous.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">kernel<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"event\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nkernel<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"event\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nawait</span> kernel<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"event\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// wait the end of each callback</span></code></pre><p>Callback results/errors.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">kernel<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nkernel<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token keyword\"> throw</span><span class=\"token keyword\"> new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NOK\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nconst</span> results <span class=\"token operator\">=</span><span class=\"token keyword\"> await</span> kernel<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nresults<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// \"OK\" || Error { OK }</span>\nresults<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// \"OK\" || Error { OK }</span></code></pre>","name":"emit","parameters":[{"description":"<p>Event name</p>","name":"key","optional":false,"type":"string"},{"description":"<p>Event data (parameters)</p>","name":"data","optional":true,"type":"any"},{"default":"<p> {}</p>","description":"<p>Emitter options</p>","name":"options","optional":false,"type":"IKernelEmitOptions"}],"returnDescription":"any","returnType":"Promise<any>","static":false,"accessor":false},{"description":"<p>Read-only Kernel#state().<br/>\nValue can be converted.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">kernel <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token string\">\"[1, 2, 3]\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nkernel<span class=\"token punctuation\">.</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> Boolean<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nkernel<span class=\"token punctuation\">.</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\"> Array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2, 3]</span></code></pre><h3 id=\"template\">Template</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\">Kernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span> <span class=\"token string\">\"${A}.${B}\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">:</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// B.c</span></code></pre>","name":"env","parameters":[{"description":"<p>Identifier as string who defined the value</p>","name":"key","optional":false,"type":"string"},{"description":"<p>Convert result on given type when it&#39;s possible</p>","name":"forceType","optional":true,"type":"Function"}],"returnDescription":"any","returnType":"any","static":false,"accessor":false},{"description":"<p>Create a new kernel with the same definitions.</p>\n<ul>\n<li>declarations are cloned without instances</li>\n<li>store and events are cleared\nBeware, parent&#39;s store is still accessible.</li>\n</ul>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> k <span class=\"token operator\">=</span><span class=\"token keyword\"> new</span> <span class=\"token class-name\">Kernel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> A<span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> C<span class=\"token punctuation\">:</span> <span class=\"token string\">\"D\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nconst</span> c <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>A<span class=\"token punctuation\">:</span> <span class=\"token string\">\"F\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nc<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// F</span>\nc<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// D</span></code></pre><p>Fork before an invoke to be a little more safe.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> k <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nconst</span> app <span class=\"token operator\">=</span><span class=\"token keyword\"> new</span> <span class=\"token class-name\">Koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  k<span class=\"token punctuation\">.</span><span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>MyCtrl<span class=\"token punctuation\">,</span> <span class=\"token string\">\"findUsers\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ctx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"fork","parameters":[{"description":"<p>Map of key value</p>","name":"store","optional":true,"type":"IStore"}],"returnDescription":"any","returnType":"Kernel","static":false,"accessor":false},{"description":"<p>Alias of Kernel#inject().</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> s <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"get","parameters":[{"description":"","name":"definition","optional":false,"type":"Class<T>"}],"returnDescription":"any","returnType":"T","static":false,"accessor":false},{"description":"<p>Inject a service/provider.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span> b <span class=\"token operator\">=</span> <span class=\"token string\">\"c\"</span> <span class=\"token punctuation\">}</span>\nkernel<span class=\"token punctuation\">.</span><span class=\"token function\">inject</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"c\"</span></code></pre><h3 id=\"parent\">Parent</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\">Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inject</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>parent<span class=\"token punctuation\">:</span> B<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"skip-registration\">Skip registration</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> k <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nk<span class=\"token punctuation\">.</span><span class=\"token function\">inject</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>register<span class=\"token punctuation\">:</span><span class=\"token keyword\"> false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// just create and process</span>\nk<span class=\"token punctuation\">.</span><span class=\"token function\">inject</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>instance<span class=\"token punctuation\">:</span> a<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// re-use an instance (and skip registration)</span></code></pre>","name":"inject","parameters":[{"description":"<p>Class or {provide: Class, use: Class}</p>","name":"definition","optional":false,"type":"Class<T> | IDefinition<T>"},{"default":"<p> {}</p>","description":"<p>Injection options</p>","name":"options","optional":false,"type":"IKernelGetOptions<T>"}],"returnDescription":"any","returnType":"T","static":false,"accessor":false},{"description":"<p>Invoke a function/method of a Class.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\nkernel<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>Some handlers are executed before the call.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"X\"</span><span class=\"token punctuation\">)</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>X<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hi!</span></code></pre>","name":"invoke","parameters":[{"description":"<p>Class or Instance, class will be instantiate.</p>","name":"definition","optional":false,"type":"Class<T> | T"},{"description":"<p>Name of the method.</p>","name":"propertyKey","optional":false,"type":"keyof T"},{"default":"<p> []</p>","description":"<p>Add more arguments.</p>","name":"additionalArguments","optional":false,"type":"any[]"}],"returnDescription":"any","returnType":"any","static":false,"accessor":false},{"description":"<p>Register an event with a key (identifier) and an action.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">kernel<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wat\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>Event can be unique.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">kernel<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"watwat\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"once\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>unique<span class=\"token punctuation\">:</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>A object &quot;Observer&quot; is returned.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> obs <span class=\"token operator\">=</span> kernel<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobs<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// wait event as promise</span>\nobs<span class=\"token punctuation\">.</span><span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// unsubscribe</span></code></pre>","name":"on","parameters":[{"description":"<p>Event name</p>","name":"key","optional":false,"type":"string"},{"default":"<p> _.noop</p>","description":"<p>What to do</p>","name":"action","optional":false,"type":"IEventCallback | IEventReference"},{"default":"<p> {}</p>","description":"<p>Listener options</p>","name":"options","optional":false,"type":"IKernelOnOptions"}],"returnDescription":"any","returnType":"IObserver","static":false,"accessor":false},{"description":"<p>Trigger onStart of each provider.\nAll onStart() are sorted by link declarations.\nAll onStart() have a access to &quot;this.declarations&quot;.\nAll onStart() are <strong>asynchronous</strong>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Provider</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span>declarations<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> IDeclarations<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> throw</span><span class=\"token keyword\"> new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nooo\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Exception nooo</span></code></pre>","name":"start","parameters":[],"returnDescription":"any","returnType":"Promise<Kernel>","static":false,"accessor":false},{"description":"<p>Getter/Setter of Kernel#store.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">kernel<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Getter</span>\nkernel<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Setter</span></code></pre><p>If key doesn&#39;t exist on this kernel, we will check on the parent.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> parent <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>A<span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nconst</span> child <span class=\"token operator\">=</span> parent<span class=\"token punctuation\">.</span><span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchild<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// B</span></code></pre><p>An event is fired on each mutation: <code>oly:state:mutate</code>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"when IStateMutateEvent is done\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"keyify\">Keyify</h3>\n<p>A key is always converted to /[A-Z_]+/.</p>\n<ul>\n<li>&quot;a&quot; -&gt; A</li>\n<li>&quot;A.b&quot; -&gt; A_B</li>\n<li>&quot;hello-world&quot; -&gt; HELLO_WORLD</li>\n</ul>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> k <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"A.b\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nk<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A_B\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A.b\"</span><span class=\"token punctuation\">)</span></code></pre>","name":"state","parameters":[{"description":"<p>Identifier as string who defined the value</p>","name":"key","optional":false,"type":"string"},{"description":"<p>Optional new value (setter mode)</p>","name":"newValue","optional":true,"type":"any"},{"default":"<p> () =&gt; null</p>","description":"<p>Optional callback triggered after the mutation (setter mode)</p>","name":"callback","optional":false,"type":"function"}],"returnDescription":"any","returnType":"any","static":false,"accessor":false},{"description":"<p>Trigger onStop of each provider.</p>\n<pre><code>const kernel = Kernel.create();\nkernel.start();\nprocess.on('message', function(msg) {\n  if (msg == 'shutdown') {\n    console.log('Closing all connections...');\n    kernel.stop()\n     .then(() => process.exit();\n }\n});</code></pre>","name":"stop","parameters":[],"returnDescription":"any","returnType":"Promise<Kernel>","static":false,"accessor":false},{"description":"<p>Chain declarations.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">Kernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> C<span class=\"token punctuation\">,</span> D<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">,</span> F<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> H<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>I<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=></span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>NODE_ENV <span class=\"token operator\">===</span> production <span class=\"token operator\">&amp;&amp;</span>\n    k<span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>J<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"with","parameters":[{"description":"<p>List of definitions.</p>","name":"definitions","optional":false,"type":"Array<Class | IDefinition>"}],"returnDescription":"<p>Kernel instance.</p>","returnType":"Kernel","static":false,"accessor":false},{"description":"<p>Factory.\nThis is recommended.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"jasmine-jest-protractor-\">Jasmine, Jest, Protractor, ...</h3>\n<p>if <code>process.env.NODE_ENV === &quot;test&quot;</code>,\nbeforeAll(() =&gt; kernel.start()) and  afterAll(() =&gt; kernel.stop()) are defined.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"something\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n <span class=\"token keyword\"> const</span> kernel <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>DB_URL<span class=\"token punctuation\">:</span> <span class=\"token string\">\"memory\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\"> const</span> ctrl <span class=\"token operator\">=</span> kernel<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>MyController<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should be ok\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\"> async</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    expect<span class=\"token keyword\">(await</span> ctrl<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"create","parameters":[{"default":"<p> {}</p>","description":"<p>Store, map of key-value. (env, conf, states, ...)</p>","name":"store","optional":false,"type":"IStore"}],"returnDescription":"any","returnType":"Kernel","static":true,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"Kernel"},{"path":"/logger/Logger.ts","description":"<p>Default logger. This class acts like an interface.</p>\n<h3 id=\"interface\">Interface</h3>\n<p>There are two arguments:</p>\n<ol>\n<li>message as <code>string</code></li>\n<li>[data] as <code>object</code></li>\n</ol>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> logger <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nconst</span> value <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nconst</span> moreData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>b<span class=\"token punctuation\">:</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nlogger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`this is my value: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> !`</span></span><span class=\"token punctuation\">,</span> moreData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlogger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`oh snap !`</span></span><span class=\"token punctuation\">,</span><span class=\"token keyword\"> new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"boom\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"levels\">Levels</h3>\n<p><strong>TRACE</strong> &lt; <strong>DEBUG</strong> &lt; <strong>INFO</strong> <em>(default)</em> &lt; <strong>WARN</strong> &lt; <strong>ERROR</strong>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">Kernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>LOGGER_LEVEL<span class=\"token punctuation\">:</span> <span class=\"token string\">\"TRACE\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">as</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"override\">Override</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyLogger</span><span class=\"token keyword\"> extends</span> <span class=\"token class-name\">Logger</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// #log(type, text)</span>\n  <span class=\"token comment\">// #format(type, text)</span>\n  <span class=\"token comment\">// #appender(type, text)</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>provide<span class=\"token punctuation\">:</span> Logger<span class=\"token punctuation\">,</span> use<span class=\"token punctuation\">:</span> MyLogger<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"implementations\">Implementations</h3>\n<p>There are some &quot;built-in&quot; loggers.</p>\n<p><code>ServerLogger</code>, with AnsiColor <em>(default on NodeJS)</em></p>\n<pre><code>[2017-9-3 19:09:52] INFO App(xx57yrab0z1) Kernel: \"kernel has been successfully started\"</code></pre><p><code>BrowserLogger</code>, with AnsiColor + CSS converter <em>(default on browsers)</em></p>\n<pre><code>[19:10:13] INFO Kernel: \"kernel has been successfully started\"</code></pre><p><code>JsonLogger</code></p>\n<pre><code>{\"now\":\"2017-09-03T17:12:17.121Z\",\"lvl\":\"INFO\",\"app\":\"App\",\"ctx\":\"xx57yrab0z1\",\"dep\":\"Kernel\",\"msg\":\".\"}</code></pre>","methods":[{"description":"<p>Rename component.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">kernel<span class=\"token punctuation\">.</span><span class=\"token function\">inject</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">as</span><span class=\"token punctuation\">(</span><span class=\"token string\">'MyComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"as","parameters":[{"description":"<p>Component name</p>","name":"componentName","optional":false,"type":"string"}],"returnDescription":"","returnType":"this","static":false,"accessor":false},{"description":"<p>Display debug message.</p>","name":"debug","parameters":[{"description":"<p>Message to log</p>","name":"message","optional":false,"type":"string"},{"description":"<p>Additional data</p>","name":"data","optional":true,"type":"undefined | object"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"<p>Display error message.</p>","name":"error","parameters":[{"description":"<p>Message to log</p>","name":"message","optional":false,"type":"string"},{"description":"<p>Additional data like Error</p>","name":"data","optional":true,"type":"undefined | object"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"<p>Display info message.</p>","name":"info","parameters":[{"description":"<p>Message to log</p>","name":"message","optional":false,"type":"string"},{"description":"<p>Additional data</p>","name":"data","optional":true,"type":"undefined | object"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"<p>Display trace (silly/verbose) message.</p>","name":"trace","parameters":[{"description":"<p>Message to log</p>","name":"message","optional":false,"type":"string"},{"description":"<p>Additional data</p>","name":"data","optional":true,"type":"undefined | object"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"<p>Display warning message.</p>","name":"warn","parameters":[{"description":"<p>Message to log</p>","name":"message","optional":false,"type":"string"},{"description":"<p>Additional data</p>","name":"data","optional":true,"type":"undefined | object"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Logger <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"Logger"}]},{"version":"1.1.1","type":"universal","decorators":[{"path":"/decorators/array.ts","description":"<p>Alias of @field.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@field</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">:</span><span class=\"token keyword\"> Array</span><span class=\"token punctuation\">,</span>\n    of<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  users<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    of<span class=\"token punctuation\">:</span> Movie <span class=\"token comment\">// mandatory</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  movies<span class=\"token punctuation\">:</span> Movie<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"array","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> array <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-json\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/decorators/date.ts","description":"<p>Alias of @field.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@field</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">,</span>\n    format<span class=\"token punctuation\">:</span> <span class=\"token string\">\"date-time\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  createdAt<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@date</span> updatedAt<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\">Date#toJSON()</a></p>","name":"date","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> date <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-json\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/decorators/field.ts","description":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Embedded</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@field</span> title<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@field</span> firstName<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@field</span> lastName<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@field</span> age<span class=\"token punctuation\">:</span><span class=\"token keyword\"> number</span><span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@field</span> something<span class=\"token punctuation\">:</span> Embedded<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h3 id=\"json-schema\">JSON Schema</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@field</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// json-schema options like minLength, ...</span>\n    <span class=\"token comment\">// \"required\" is also available</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  propertyKey<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\njson<span class=\"token punctuation\">.</span><span class=\"token function\">schema</span><span class=\"token punctuation\">(</span>Data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {properties: {...</span></code></pre><h3 id=\"type\">Type</h3>\n<p>Mapping requires a &quot;Type&quot;, most of the time TypeScript type annotations are enough.</p>\n<p>Exceptions:</p>\n<ul>\n<li>array (see @array)</li>\n<li>native type (see @date)</li>\n</ul>\n<h3 id=\"required-by-default\">Required by default</h3>\n<p>Like a Typescript property, <strong>a @field property is required by default</strong>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@field</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>required<span class=\"token punctuation\">:</span><span class=\"token keyword\"> false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> myProperty<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// now it's optional</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"field","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> field <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-json\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/decorators/optional.ts","description":"<p>Alias of @field.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@field</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    required<span class=\"token punctuation\">:</span><span class=\"token keyword\"> false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  firstName<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@optional</span> lastName<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"optional","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> optional <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-json\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/decorators/schema.ts","description":"<p>Sometimes @field is not enough. <br/> @schema overrides or replaces the generated schema of a class.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token annotation punctuation\">@schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Toto\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@schema</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>s<span class=\"token punctuation\">,</span>\n  description<span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">B</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"schema","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> schema <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-json\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]}],"interfaces":[],"components":[],"exceptions":[],"manuals":[{"path":"docs/Stringify.md","name":"Stringify","content":"<h1 id=\"stringify\">Stringify</h1>\n<p>Serialization works with a regular <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">JSON.stringify()</a>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> Json<span class=\"token punctuation\">,</span> field <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-json\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@field</span> name<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ECMAScript standard</span>\n  <span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">{</span>\n      name<span class=\"token punctuation\">:</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  \n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nconst</span> json <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nconst</span> data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>Data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jean\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\njson<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// same</span>\nJSON<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>"}],"env":[],"home":"<h1 id=\"oly-json\">o<em>l</em>y json</h1>\n<p>JSON Schema with decorators to map and validate data.</p>\n<p>o<em>l</em>y json is a module of the <a href=\"https://nolyme.github.io/oly\">o<em>l</em>y project</a>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> field<span class=\"token punctuation\">,</span> Json <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-json\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@field</span> name<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nconst</span> kernel <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nconst</span> json <span class=\"token operator\">=</span> kernel<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\njson<span class=\"token punctuation\">.</span><span class=\"token function\">schema</span><span class=\"token punctuation\">(</span>Data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// {properties: [{name: ...</span>\n\njson<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>Data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Data { name: \"John\" }</span>\njson<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>Data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>fake<span class=\"token punctuation\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// throw ValidationException</span></code></pre><h2 id=\"installation\">Installation</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> oly oly-json</code></pre><h2 id=\"dependencies\">Dependencies</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JSON-Schema Validator</td>\n<td><a href=\"https://github.com/epoberezkin/ajv\">ajv</a></td>\n</tr>\n</tbody>\n</table>","name":"oly-json","services":[{"path":"/services/Json.ts","description":"<p>Allow to parse object and array of objects</p>","methods":[{"description":"<p>Json#parse(), Json#validate(), Json#map() and Json#sanitize().</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@field</span> name<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>Data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jean\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"build","parameters":[{"description":"<p>Class definition</p>","name":"type","optional":false,"type":"Class<T>"},{"description":"<p>Raw data (string or object)</p>","name":"data","optional":false,"type":"any"}],"returnDescription":"any","returnType":"T","static":false,"accessor":false},{"description":"<p>Transform json into class.</p>","name":"map","parameters":[{"description":"<p>Class definition</p>","name":"type","optional":false,"type":"Class<T>"},{"description":"<p>Json data</p>","name":"data","optional":false,"type":"object"}],"returnDescription":"<p>Mapped object</p>","returnType":"T","static":false,"accessor":false},{"description":"<p>Like JSON.parse.</p>","name":"parse","parameters":[{"description":"<p>Raw (string or object)</p>","name":"data","optional":false,"type":"string | any"}],"returnDescription":"<p>Json object</p>","returnType":"object","static":false,"accessor":false},{"description":"<p>Sanitize data.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@field</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>upper<span class=\"token punctuation\">:</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> name<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sanitize</span><span class=\"token punctuation\">(</span>Data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jean\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"sanitize","parameters":[{"description":"<p>Class definition</p>","name":"type","optional":false,"type":"Class<T>"},{"description":"<p>Json data</p>","name":"data","optional":false,"type":"T"}],"returnDescription":"<p>Sanitized data</p>","returnType":"T","static":false,"accessor":false},{"description":"<p>Extract JsonSchemaReader from a class.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@field</span> name<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">schema</span><span class=\"token punctuation\">(</span>Data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {properties: { ...</span></code></pre>","name":"schema","parameters":[{"description":"<p>Definition</p>","name":"type","optional":false,"type":"Class<T>"}],"returnDescription":"<p>JsonSchema</p>","returnType":"IJsonSchema","static":false,"accessor":false},{"description":"<p>Like JSON.stringify.</p>","name":"stringify","parameters":[{"description":"<p>Json (string or object)</p>","name":"data","optional":false,"type":"string | any"}],"returnDescription":"<p>Json string</p>","returnType":"string","static":false,"accessor":false},{"description":"<p> Validator based on ajv.\n Result can be different (depend on ajv configuration).</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\"> class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token annotation punctuation\">@field</span> name<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\"> const</span> validData <span class=\"token operator\">=</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>Data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jean\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"validate","parameters":[{"description":"<p>Class definition with JsonSchemaReader</p>","name":"type","optional":false,"type":"Class"},{"description":"<p>Json data</p>","name":"data","optional":false,"type":"T"}],"returnDescription":"<p>Data after validation if valid</p>","returnType":"T","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Json <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-json\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"Json"}]},{"version":"1.1.0","type":"universal","decorators":[],"interfaces":[],"components":[],"exceptions":[{"path":"/exceptions/HttpClientException.ts","description":"<p>Exception wrapper of AxiosError. <br/></p>\n<h3 id=\"fields\">Fields</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>status</td>\n<td>number</td>\n<td>-1</td>\n<td>HTTP status</td>\n</tr>\n<tr>\n<td>body</td>\n<td>any</td>\n<td>undefined</td>\n<td>HTTP response body</td>\n</tr>\n<tr>\n<td>cause</td>\n<td>AxiosError</td>\n<td>N/A</td>\n<td>axios error</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\"> await</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\"> catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\"> if</span><span class=\"token punctuation\">(</span>e<span class=\"token keyword\"> instanceof</span> <span class=\"token class-name\">HttpClientException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token keyword\"> if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><h3 id=\"follow-httpserverexception\">Follow HttpServerException</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\"> await</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\"> catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\"> if</span> <span class=\"token punctuation\">(</span>e<span class=\"token keyword\"> instanceof</span> <span class=\"token class-name\">HttpClientException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token keyword\"> if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">isHttpServerException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token punctuation\">(</span>e as HttpClientException<span class=\"token operator\">&lt;</span>HttpServerException<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span>body\n        <span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpClientException <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-http\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"HttpClientException"},{"path":"/exceptions/HttpServerException.ts","description":"<p>Public API exception. See ApiProvider.\nNote:</p>\n<ul>\n<li>there is no cause in #toJSON() in production. (security)</li>\n<li>stacktrace is always available on logging.</li>\n<li>status is added (default to 500)</li>\n</ul>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\"> throw</span><span class=\"token keyword\"> new</span> <span class=\"token class-name\">HttpServerException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p>Like others exceptions, this is designed to be extended.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BadRequestException</span><span class=\"token keyword\"> extends</span> <span class=\"token class-name\">HttpServerException</span> <span class=\"token punctuation\">{</span>\n   status <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpServerException <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-http\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"HttpServerException"}],"manuals":[],"env":[{"default":"\"127.0.0.1\"","description":"<p>Set hostname of the http server.</p>","name":"HTTP_SERVER_HOST","optional":true,"target":"HttpServerProvider","type":"string"},{"default":"3000","description":"<p>Set port of the http server.</p>","name":"HTTP_SERVER_PORT","optional":true,"target":"HttpServerProvider","type":"number"}],"home":"<h1 id=\"oly-http\">o<em>l</em>y http</h1>\n<p>HTTP Server and Client.</p>\n<p>o<em>l</em>y http is a module of the <a href=\"https://nolyme.github.io/oly\">o<em>l</em>y project</a>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> HttpClient<span class=\"token punctuation\">,</span> HttpServerProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-http\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nconst</span> kernel <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>HTTP_SERVER_PORT<span class=\"token punctuation\">:</span> <span class=\"token number\">4040</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nconst</span> server <span class=\"token operator\">=</span> kernel<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>HttpServerProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// koa</span><span class=\"token keyword\">\nconst</span> client <span class=\"token operator\">=</span> kernel<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>HttpClient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// axios</span>\n\nkernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>ctx <span class=\"token operator\">=></span> ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// koa middleware</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                   <span class=\"token comment\">// axios#get</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"installation\">Installation</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> oly oly-http</code></pre><h2 id=\"dependencies\">Dependencies</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HTTP Client</td>\n<td><a href=\"https://github.com/mzabriskie/axios\">axios</a></td>\n</tr>\n<tr>\n<td>HTTP Server Framework</td>\n<td><a href=\"https://github.com/koajs/koa\">koa</a></td>\n</tr>\n</tbody>\n</table>","icon":"exchange","name":"oly-http","services":[{"path":"/providers/HttpServerProvider.ts","description":"<p>Default http server provider</p>","methods":[{"description":"<p>Hostname getter.\nProtocol is forced to http as we only use Http Server.</p>","name":"hostname","parameters":[],"returnDescription":"any","returnType":"string","static":false,"accessor":true},{"description":"<p>Start the http server.\nListen new connections.</p>","name":"onStart","parameters":[],"returnDescription":"any","returnType":"Promise<void>","static":false,"accessor":false},{"description":"<p>Stop http server.\nWe don&#39;t wait the callback.</p>","name":"onStop","parameters":[],"returnDescription":"any","returnType":"Promise<void>","static":false,"accessor":false},{"description":"<p>Configure middleware before onStart().</p>","name":"use","parameters":[{"description":"","name":"middleware","optional":false,"type":"IKoaMiddleware"}],"returnDescription":"any","returnType":"HttpServerProvider","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpServerProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-http\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"HttpServerProvider"},{"path":"/services/HttpClient.ts","description":"<p>Simple wrapper of Axios.\nDesigned to be extended.</p>","methods":[{"description":"<p>Make a DEL request.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">await</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users/1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"del","parameters":[{"description":"<p>Complete url</p>","name":"url","optional":false,"type":"string"},{"default":"<p> {}</p>","description":"<p>Request options</p>","name":"options","optional":false,"type":"IHttpRequest"}],"returnDescription":"any","returnType":"Promise<T>","static":false,"accessor":false},{"description":"<p>Make a GET request.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">await</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"get","parameters":[{"description":"<p>Complete url</p>","name":"url","optional":false,"type":"string"},{"default":"<p> {}</p>","description":"<p>Request options</p>","name":"options","optional":false,"type":"IHttpRequest"}],"returnDescription":"any","returnType":"Promise<T>","static":false,"accessor":false},{"description":"<p>Make a POST request.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">await</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jean\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"post","parameters":[{"description":"<p>Complete url</p>","name":"url","optional":false,"type":"string"},{"default":"<p> {}</p>","description":"<p>Request body</p>","name":"body","optional":false,"type":"any"},{"default":"<p> {}</p>","description":"<p>Request options</p>","name":"options","optional":false,"type":"IHttpRequest"}],"returnDescription":"any","returnType":"Promise<T>","static":false,"accessor":false},{"description":"<p>Make a PUT request.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">await</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users/1\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jean\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"put","parameters":[{"description":"<p>Complete url</p>","name":"url","optional":false,"type":"string"},{"default":"<p> {}</p>","description":"<p>Request body</p>","name":"body","optional":false,"type":"any"},{"default":"<p> {}</p>","description":"<p>Request options</p>","name":"options","optional":false,"type":"IHttpRequest"}],"returnDescription":"any","returnType":"Promise<T>","static":false,"accessor":false},{"description":"<p>Create a new http request.</p>","name":"request","parameters":[{"description":"<p>Http Request Options</p>","name":"request","optional":false,"type":"IHttpRequest"}],"returnDescription":"any","returnType":"Promise<IHttpResponse<T>>","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpClient <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-http\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"HttpClient"}]},{"version":"1.1.0","type":"universal","decorators":[{"path":"/core/decorators/action.ts","description":"<p>Define a method as action. @action is based on @on.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span><span class=\"token keyword\"> extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@inject</span> http<span class=\"token punctuation\">:</span> PixieHttp<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@action</span>\n <span class=\"token keyword\"> async</span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> const</span> data <span class=\"token operator\">=</span><span class=\"token keyword\"> await</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-typescript\"><span class=\"token operator\">=</span><span class=\"token keyword\">{this</span><span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span>ok<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// allowed</span>\nkernel<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A.onClick\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>Method of @action is &quot;autobind&quot;.</p>\n<h3 id=\"events\">Events</h3>\n<p>The global event <code>oly:actions:begin</code> is emitted before each action. <br/>\nThe global event <code>oly:actions:error</code> is emitted on each error.      <br/>\nThe global event <code>oly:actions:success</code> is emitted on each success.</p>\n<blockquote>\n<p>Tools like <a href=\"https://github.com/angular/protractor\">Protrator</a> or <a href=\"https://github.com/electron/spectron\">Spectron</a>\ncan use this events as &quot;next-tick&quot;.</p>\n</blockquote>\n<h3 id=\"prevent\">Prevent</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>prevent<span class=\"token punctuation\">:</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// will call ev.stopPropagation() AND ev.preventDefault()</span>\n  <span class=\"token function\">onSubmit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"action","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> action <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/router/decorators/layout.ts","description":"<p>Alias of @page.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Pages</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@field</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    abstract<span class=\"token punctuation\">:</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">,</span>\n    layout<span class=\"token punctuation\">:</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">root</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// same</span>\n  <span class=\"token annotation punctuation\">@layout</span> <span class=\"token function\">root2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p>All other pages of the class will become a &quot;child&quot; of this method.<br/>\nUse &lt;View/&gt; to display the child layer.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Pages</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@layout</span>\n  <span class=\"token function\">root</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// View will display home or about or nothing</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/about\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">about</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>about<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p>With &quot;modules&quot;.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ModuleA</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@layout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/a\"</span><span class=\"token punctuation\">)</span> <span class=\"token function-variable function\">a</span>     <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>    <span class=\"token function-variable function\">index</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>A<span class=\"token punctuation\">:</span>Index<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">MainModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@layout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>ModuleA<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token function-variable function\">root</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span><span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"layout","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> layout <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/router/decorators/page.ts","description":"<p>Create a new React route.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Pages</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><h3 id=\"transition\">Transition</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Pages</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">home</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">:</span> ITransition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>from<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p>Do not use Router#current here but <code>tr.from</code> and <code>tr.to</code>.</p>\n<h3 id=\"children\">Children</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ChildPages</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>      <span class=\"token function-variable function\">index</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Index<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/about\"</span><span class=\"token punctuation\">)</span> <span class=\"token function-variable function\">about</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>About<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Pages</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">\"/c\"</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>ChildPages<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">root</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><h3 id=\"not-found-\">Not Found ?</h3>","name":"page","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> page <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/router/decorators/param.ts","description":"<p>Extract path param from page url.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\"> class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/:id\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span></code></pre><h3 id=\"pages-are-ordered\">Pages are ordered</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\"> class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/ok\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// this is ok</span>\n\n   <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/:id\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bad\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">bad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// this is bad</span>\n <span class=\"token punctuation\">}</span></code></pre>","name":"param","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> param <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/router/decorators/query.ts","description":"<p>Extract query param from page url.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\"> class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from\"</span><span class=\"token punctuation\">)</span><span class=\"token keyword\"> from</span><span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Hello<span class=\"token keyword\"> from</span> <span class=\"token keyword\">{from</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span></code></pre>","name":"query","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> query <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]}],"interfaces":[],"components":[{"path":"/core/components/AppContext.tsx","name":"AppContext","description":"<p>Add an oly Kernel to <code>childContext</code>.\nSee ReactBrowserProvider and ReactServerProvider.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">Kernel\n <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>deps<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>kernel <span class=\"token operator\">=></span>\n   <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AppContext</span> <span class=\"token attr-name\">kernel</span><span class=\"token script language-typescript\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">{</span>kernel<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MyApp</span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AppContext</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span> rootElement<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppContext <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","props":[{"name":"kernel","description":"","type":"Kernel","optional":false,"default":"N/A"}]},{"path":"/router/components/Go.tsx","name":"Go","description":"<p>Anchor element + Router#go().</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Go</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Go<span class=\"token operator\">></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Go</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>users.detail<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">params</span><span class=\"token script language-typescript\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>userId<span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token operator\">...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Go</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"isactive\">IsActive</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Go</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">active</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>my-active-class<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">strict</span><span class=\"token script language-typescript\"><span class=\"token operator\">=</span><span class=\"token keyword\">{true</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token operator\">...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Go</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"action\">Action</h3>\n<ul>\n<li>Go#onClick is ALWAYS an @action.</li>\n</ul>","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Go <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","props":[{"name":"active","description":"<p>Set &quot;active&quot; className.</p>","type":"undefined | string","optional":true,"default":"N/A"},{"name":"params","description":"<p>PathParams.</p>","type":"undefined | object","optional":true,"default":"N/A"},{"name":"query","description":"<p>QueryParams.</p>","type":"undefined | object","optional":true,"default":"N/A"},{"name":"strict","description":"<p>Active strict.</p>","type":"undefined | true | false","optional":true,"default":"N/A"},{"name":"to","description":"<p>Route name / url.</p>","type":"string","optional":false,"default":"N/A"}]},{"path":"/router/components/View.tsx","name":"View","description":"<p>Display the result of a @page.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@layout</span> <span class=\"token function-variable function\">root</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Go</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>page1<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Go<span class=\"token operator\">></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Go</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>page2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>page2<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Go<span class=\"token operator\">></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span><span class=\"token punctuation\">/></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>  <span class=\"token function-variable function\">page1</span>     <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/2\"</span><span class=\"token punctuation\">)</span> <span class=\"token function-variable function\">page2</span>     <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/*\"</span><span class=\"token punctuation\">)</span> <span class=\"token function-variable function\">notFound</span>  <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>notFound<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@page</span>       <span class=\"token function-variable function\">error</span>     <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Boom<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> View <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","props":[{"name":"index","description":"<p>Force layer id.</p>","type":"undefined | number","optional":true,"default":"N/A"},{"name":"name","description":"<p>By default, view is named <code>main</code> and chunks equal <code>{main: JSX}</code>.\nSet another name will check another chunk name.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@layout</span> <span class=\"token function\">root</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span>/</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span><span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token annotation punctuation\">@page</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">{</span>\n      header<span class=\"token punctuation\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Header</span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n      main<span class=\"token punctuation\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>App</span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","type":"undefined | string","optional":true,"default":"N/A"},{"name":"onChange","description":"<p>When view is <strong>updated</strong>.\nYou can use it to force scroll top.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-typescript\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> el <span class=\"token operator\">=</span> div<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-typescript\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>","type":"undefined | function","optional":true,"default":"N/A"}]}],"exceptions":[],"manuals":[{"path":"docs/Example.md","name":"Example","content":"<h1 id=\"example\">Example</h1>\n<p>We have this react component.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> as React<span class=\"token keyword\"> from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nexport</span><span class=\"token keyword\"> interface</span> <span class=\"token class-name\">IHomeProps</span> <span class=\"token punctuation\">{</span>\n  news<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nexport</span><span class=\"token keyword\"> class</span> <span class=\"token class-name\">Home</span><span class=\"token keyword\"> extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span><span class=\"token operator\">&lt;</span>IHomeProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token keyword\">{this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>news<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>line<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p>Maybe, we need to fetch some data before the rendering.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> inject <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> PixieHttp <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> Home <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"./Home\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nexport</span><span class=\"token keyword\"> class</span> <span class=\"token class-name\">ReactApp</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@inject</span> http<span class=\"token punctuation\">:</span> PixieHttp<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword\"> async</span> <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> const</span> news <span class=\"token operator\">=</span><span class=\"token keyword\"> await</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Home</span> <span class=\"token attr-name\">news</span><span class=\"token script language-typescript\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">{</span>news<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p>Now, we need some data.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> get <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nexport</span><span class=\"token keyword\"> class</span> <span class=\"token class-name\">Api</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/data\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p>At last, we need our entries: main.browser.ts</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> ReactBrowserProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> ReactApp <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"./ReactApp\"</span><span class=\"token punctuation\">;</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>ReactApp<span class=\"token punctuation\">,</span> ReactBrowserProvider<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>And: main.server.ts</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> ApiProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> ReactServerProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> ReactApp <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"./ReactApp\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> Api <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"./Api\"</span><span class=\"token punctuation\">;</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>ReactApp<span class=\"token punctuation\">,</span> ReactServerProvider<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Api<span class=\"token punctuation\">,</span> ApiProvider<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>"},{"path":"docs/Routing.md","name":"Routing","content":"<h1 id=\"routing\">Routing</h1>\n<p>The embedded router is based on <a href=\"https://www.npmjs.com/package/history\">history</a> and <a href=\"https://www.npmjs.com/package/path-to-regexp\">path-to-regex</a>.</p>\n<h2 id=\"page-node-route-and-path-\">Page, Node, Route and Path.</h2>\n<p>In this example:</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> layout<span class=\"token punctuation\">,</span> View<span class=\"token punctuation\">,</span> ITransition<span class=\"token punctuation\">,</span> page <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">MyController</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@layout</span>\n  <span class=\"token function\">root</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">:</span> ITransition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>from<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// old route</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// new route</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MyComponent</span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p>MyController has a <strong>node</strong> called <em>index</em>.\nThis node is defined by a <strong>@page</strong> decorator.</p>\n<p>After Kernel#start(), this node will be mounted as <strong>route</strong> with path <strong>&quot;/&quot;</strong>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">router<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// by path</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// by node (not recommended)</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root.index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// by route</span></code></pre><h2 id=\"resolves-and-actions\">Resolves and Actions</h2>\n<p>All resolves are asynchronous. </p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyController</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword\"> async</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> const</span> data <span class=\"token operator\">=</span><span class=\"token keyword\"> await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/something\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n   <span class=\"token keyword\"> const</span> MyComponent <span class=\"token operator\">=</span><span class=\"token keyword\"> await</span><span class=\"token keyword\"> import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./MyComponent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MyComponent</span> <span class=\"token attr-name\">data</span><span class=\"token script language-typescript\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><h2 id=\"redirection\">Redirection</h2>\n<p>When a resolve returns a promise of Transition(type=REPLACE), oly creates a redirection.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyController</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword\"> async</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>to<span class=\"token punctuation\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"REPLACE\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><h2 id=\"error-notfound\">Error, NotFound</h2>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">\nexport</span><span class=\"token keyword\"> class</span> <span class=\"token class-name\">MyErrorHandler</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// define a route named \"error\" to catch transition errors</span>\n  <span class=\"token annotation punctuation\">@page</span> <span class=\"token function\">error</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">:</span> ITransitionError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">></span></span>Error<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>tr<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">.</span>message <span class=\"token operator\">||</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// use </span><span class=\"token comment\">/* to handle \"page not found\"\n  @page(\"/*\") notFound(e: ITransition) {\n    return &lt;pre>Page Not Found&lt;/pre>\n  }\n}</span></code></pre>"},{"path":"docs/Events.md","name":"Events","content":"<h1 id=\"events\">Events</h1>\n<h2 id=\"actions\">Actions</h2>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@on</span><span class=\"token punctuation\">(</span>olyReactEvents<span class=\"token punctuation\">.</span>ACTION_BEGIN<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">onActionBegin</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">:</span> IActionBeginEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@on</span><span class=\"token punctuation\">(</span>olyReactEvents<span class=\"token punctuation\">.</span>ACTION_ERROR<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">onActionError</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">:</span> IActionErrorEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@on</span><span class=\"token punctuation\">(</span>olyReactEvents<span class=\"token punctuation\">.</span>ACTION_SUCCESS<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">onActionSuccess</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">:</span> IActionSuccessEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><h2 id=\"transitions\">Transitions</h2>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@on</span><span class=\"token punctuation\">(</span>olyReactRouterEvents<span class=\"token punctuation\">.</span>TRANSITION_BEGIN<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">onTransitionBegin</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">:</span> ITransitionBeginEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@on</span><span class=\"token punctuation\">(</span>olyReactRouterEvents<span class=\"token punctuation\">.</span>TRANSITION_END<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">onTransitionEnd</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">:</span> ITransitionEndEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>"}],"env":[{"default":"\"\"","description":"<p>Force ApiRoot.</p>","name":"PIXIE_HTTP_ROOT","optional":true,"target":"PixieHttp","type":"string"},{"description":"","name":"PIXIE_SESSION_COOKIE_OPTIONS","optional":false,"target":"PixieSession","type":"ICookieOptions"},{"default":"\"PXI\"","description":"","name":"PIXIE_SESSION_IDENTIFIER","optional":true,"target":"PixieSession","type":"string"},{"default":"\"PREF\"","description":"","name":"PIXIE_SESSION_PREFERENCES","optional":true,"target":"PixieSession","type":"string"},{"default":"\"app\"","description":"","name":"REACT_ID","optional":true,"target":"ReactBrowserProvider","type":"string"},{"default":"false","description":"","name":"REACT_ROUTER_HASH","optional":true,"target":"ReactBrowserProvider","type":"boolean"},{"default":"\"/\"","description":"<p>Prefix your react app. It&#39;s like API_PREFIX.\nIt&#39;s universal:</p>\n<ul>\n<li>Browser will use it like a &lt;base href</li>\n<li>Server will use koa-mount(prefix).</li>\n</ul>","name":"REACT_ROUTER_PREFIX","optional":true,"target":"ReactRouterProvider","type":"string"},{"default":" [\n    \"www\",\n    \"http://localhost:8080\",\n    \"DEFAULT\",\n  ]","description":"<p>Where to find react browser app.</p>","name":"REACT_SERVER_POINTS","optional":true,"target":"ReactServerProvider","type":"string[] | string"}],"home":"<h1 id=\"oly-react\">o<em>l</em>y react</h1>\n<p>Create an app with React and oly.</p>\n<p>o<em>l</em>y react is a module of the <a href=\"https://nolyme.github.io/oly\">o<em>l</em>y project</a>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> ReactServerProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token operator\">*</span> as React<span class=\"token keyword\"> from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">ReactApp</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@page</span>\n  <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Hello World<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>HTTP_SERVER_PORT<span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>ReactApp<span class=\"token punctuation\">,</span> ReactServerProvider<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"installation\">Installation</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> oly oly-react react @types/react react-dom</code></pre><h2 id=\"features\">Features</h2>\n<h3 id=\"-inject-env-on-with-react\">@inject/@env/@on with React</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> inject<span class=\"token punctuation\">,</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> AppContext <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token operator\">*</span> as React<span class=\"token keyword\"> from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> render <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">App</span><span class=\"token keyword\"> extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@inject</span> kernel<span class=\"token punctuation\">:</span> Kernel<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token keyword\">{this</span><span class=\"token punctuation\">.</span>kernel<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nconst</span> kernel <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AppContext</span> <span class=\"token attr-name\">kernel</span><span class=\"token script language-typescript\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">{</span>kernel<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>App</span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AppContext</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"router\">Router</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> layout<span class=\"token punctuation\">,</span> View<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> Go <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@layout</span> <span class=\"token function\">root</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Go</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Go<span class=\"token operator\">></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Go</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>about<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>About<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Go<span class=\"token operator\">></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Home<span class=\"token operator\">!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@page</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/a\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">about</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>About<span class=\"token operator\">!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><h3 id=\"server-side-rendering\">Server Side Rendering</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// app.tsx</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> page <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@page</span> <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Hi<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// main.browser.ts</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> ReactBrowserProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">,</span> ReactBrowserProvider<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">// main.server.ts</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> ReactServerProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>REACT_SERVER_POINTS<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"www\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// webpack build directory</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">,</span> ReactServerProvider<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span></code></pre><h2 id=\"dependencies\">Dependencies</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Routing</td>\n<td><a href=\"https://github.com/pillarjs/path-to-regexp\">path-to-regexp</a></td>\n</tr>\n<tr>\n<td>History</td>\n<td><a href=\"https://github.com/ReactTraining/history\">history</a></td>\n</tr>\n<tr>\n<td>Meta</td>\n<td><a href=\"https://github.com/nfl/react-helmet\">react-helmet</a></td>\n</tr>\n</tbody>\n</table>","name":"oly-react","services":[{"path":"/pixie/services/PixieHttp.ts","description":"<p>HttpClient with PixieStore.\nAll get|post|... requests are wrapped with PixieStore#fly().</p>","methods":[{"description":"<p>API Prefix. Each request starting with / will be prefixed by root. See PIXIE_HTTP_ROOT.</p>","name":"root","parameters":[],"returnDescription":"any","returnType":"string","static":false,"accessor":true},{"description":"<p>Make a HTTP DEL and cache response with PixieStore#fly(). </br>\nBased on HttpClient#del().</p>","name":"del","parameters":[{"description":"","name":"url","optional":false,"type":"string"},{"description":"","name":"options","optional":true,"type":"IHttpRequest"}],"returnDescription":"","returnType":"Promise<T>","static":false,"accessor":false},{"description":"<p>Make a HTTP GET and cache response with PixieStore#fly(). </br>\nBased on HttpClient#get().</p>","name":"get","parameters":[{"description":"","name":"url","optional":false,"type":"string"},{"description":"","name":"options","optional":true,"type":"IHttpRequest"}],"returnDescription":"","returnType":"Promise<T>","static":false,"accessor":false},{"description":"<p>Make a HTTP POST and cache response with PixieStore#fly(). </br>\nBased on HttpClient#post().</p>","name":"post","parameters":[{"description":"","name":"url","optional":false,"type":"string"},{"description":"","name":"body","optional":true,"type":"any"},{"description":"","name":"options","optional":true,"type":"IHttpRequest"}],"returnDescription":"","returnType":"Promise<T>","static":false,"accessor":false},{"description":"<p>Make a HTTP PUT and cache response with PixieStore#fly(). </br>\nBased on HttpClient#put().</p>","name":"put","parameters":[{"description":"","name":"url","optional":false,"type":"string"},{"description":"","name":"body","optional":true,"type":"any"},{"description":"","name":"options","optional":true,"type":"IHttpRequest"}],"returnDescription":"","returnType":"Promise<T>","static":false,"accessor":false},{"description":"<p>Like HttpClient#request() with</p>\n<ul>\n<li>an auto-prefix if possible (see PixieHttp#root)</li>\n<li>auto-authorization if possible (see PixieSession#getIdentity())</li>\n</ul>\n<p><br/>\nResponse is not CACHED into PixieStore unlike PixieHttp#get() &amp; cie.</p>","name":"request","parameters":[{"description":"<p>HttpClient request options</p>","name":"options","optional":false,"type":"IHttpRequest"}],"returnDescription":"any","returnType":"Promise<IHttpResponse<T>>","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PixieHttp <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"PixieHttp"},{"path":"/pixie/services/PixieSession.ts","description":"<p>Preferences and Identifier available Browser/Server side with Cookies.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> session <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>PixieSession<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li><p>Preferences is a object of key/value.</p>\n<ul>\n<li>Store public user preferences only.</li>\n</ul>\n</li>\n<li><p>Identity is a string.</p>\n<ul>\n<li>Store a token/sessionId with httpOnly when possible (server-side only).</li>\n</ul>\n</li>\n</ul>","methods":[{"description":"<p>Get a preference.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> session <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>PixieSession<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsession<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyPref\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"get","parameters":[{"description":"","name":"key","optional":false,"type":"string"}],"returnDescription":"","returnType":"string | undefined","static":false,"accessor":false},{"description":"<p>Get the current identity.</p>","name":"getIdentity","parameters":[],"returnDescription":"any","returnType":"string | undefined","static":false,"accessor":false},{"description":"<p>Set a key/value.</p>","name":"put","parameters":[{"description":"","name":"key","optional":false,"type":"string"},{"description":"","name":"value","optional":false,"type":"any"},{"default":"<p> {}</p>","description":"","name":"cookieOptions","optional":false,"type":"ICookieOptions"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"<p>Put an identity.</p>","name":"putIdentity","parameters":[{"description":"","name":"identity","optional":false,"type":"string"},{"default":"<p> {}</p>","description":"","name":"cookieOptions","optional":false,"type":"ICookieOptions"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"<p>Remove a pref.</p>","name":"remove","parameters":[{"description":"","name":"key","optional":false,"type":"string"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"<p>Remove identity.</p>","name":"removeIdentity","parameters":[],"returnDescription":"any","returnType":"void","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PixieSession <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"PixieSession"},{"path":"/pixie/services/PixieStore.ts","description":"<p>Store some data server side and send them to the browser.</p>","methods":[{"description":"<p>Like set, but for functions. Used by PixieHttp#get().\nFunction will be called only server-side.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// server-side</span><span class=\"token keyword\">\nawait</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// function is called, data are cached</span>\n<span class=\"token comment\">// browser-side</span><span class=\"token keyword\">\nawait</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// function is NOT called, data are re-used and removed from the store</span><span class=\"token keyword\">\nawait</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// function is called</span></code></pre>","name":"fly","parameters":[{"description":"<p>Identifier</p>","name":"key","optional":false,"type":"string"},{"description":"<p>Function to call which returns a value</p>","name":"func","optional":false,"type":"function"}],"returnDescription":"<p>The value</p>","returnType":"Promise<T>","static":false,"accessor":false},{"description":"<p>Get a value from the store.</p>","name":"get","parameters":[{"description":"","name":"key","optional":false,"type":"string"}],"returnDescription":"","returnType":"T | undefined","static":false,"accessor":false},{"description":"<p>Set value to the store. Used by PixieStore#fly().</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// server side</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// browser side</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// b is ignored</span></code></pre>","name":"set","parameters":[{"description":"<p>Key</p>","name":"key","optional":false,"type":"string"},{"description":"<p>Value</p>","name":"value","optional":false,"type":"T"},{"default":"<p> {}</p>","description":"<p>only+once</p>","name":"options","optional":false,"type":"IPixieSetOptions"}],"returnDescription":"","returnType":"T","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PixieStore <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"PixieStore"},{"path":"/router/providers/ReactBrowserProvider.ts","description":"<p>Mount an AppContext to a rootElement with id=<code>REACT_ID</code>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@page</span> <span class=\"token function-variable function\">index</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Hello World<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>REACT_ID<span class=\"token punctuation\">:</span> <span class=\"token string\">\"app\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">,</span> ReactBrowserProvider<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>ReactBrowserProvider depends on ReactRouterProvider.</p>","methods":[{"description":"<p>Create JSX root element.</p>","name":"rootElement","parameters":[],"returnDescription":"any","returnType":"Element","static":false,"accessor":true},{"description":"<p>Hook - start</p>","name":"onStart","parameters":[],"returnDescription":"any","returnType":"Promise<void>","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ReactBrowserProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"ReactBrowserProvider"},{"path":"/router/providers/ReactRouterProvider.ts","description":"<p>Transform all @page to routes.\nPublic API is available on Router.</p>\n<blockquote>\n<p>Don&#39;t use it directly useless you know what you are doing.</p>\n</blockquote>","methods":[{"description":"<p>Get the href of routeName/routeQuery/templateUrl.</p>","name":"href","parameters":[{"description":"","name":"query","optional":false,"type":"IHrefQuery"}],"returnDescription":"","returnType":"string | undefined","static":false,"accessor":false},{"description":"<p>Hook - start.</p>","name":"onStart","parameters":[{"description":"","name":"declarations","optional":false,"type":"IDeclarations"}],"returnDescription":"any","returnType":"any","static":false,"accessor":false},{"description":"","name":"scan","parameters":[{"description":"","name":"declarations","optional":false,"type":"IDeclarations"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"<p>Start a transition.</p>","name":"transition","parameters":[{"description":"<p>Query href</p>","name":"query","optional":false,"type":"IHrefQuery"}],"returnDescription":"<p>A transition object or nothing if transition was aborted</p>","returnType":"Promise<ITransition | undefined>","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ReactRouterProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"ReactRouterProvider"},{"path":"/router/services/Router.ts","description":"<p>Public API of ReactRouterProvider.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span><span class=\"token keyword\"> extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@inject</span> router<span class=\"token punctuation\">:</span> Router\n\n  <span class=\"token annotation punctuation\">@action</span>\n  <span class=\"token function\">onClickSomewhere</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre><p>When a component injects Router, #forceUpdate is called after each transition.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span><span class=\"token keyword\"> extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  watchlist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// override watchlist</span>\n<span class=\"token punctuation\">}</span></code></pre>","methods":[{"description":"<p>Get the current route node definition.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// \"/abc/def\"</span>\nrouter<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// {a: \"b\"}</span>\nrouter<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// {a: \"b\"}</span>\nrouter<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// IRoute</span></code></pre><h3 id=\"limitation\">Limitation</h3>\n<p>Avoid Router#current inside a page function.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Pages</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@inject</span> router<span class=\"token punctuation\">:</span> Router<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@page</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">:</span> ITransition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>router<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">;</span> <span class=\"token comment\">// bad (current=from)</span>\n    tr<span class=\"token punctuation\">.</span>from<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// good</span>\n    tr<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">;</span>               <span class=\"token comment\">// good</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"current","parameters":[],"returnDescription":"any","returnType":"IMatch","static":false,"accessor":true},{"description":"<p>Call browser-history goBack.</p>","name":"back","parameters":[],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"<p>Call browser-history goForward.</p>","name":"forward","parameters":[],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"<p>Go to a named node/route/path.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// path is allowed</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or node name</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or route name</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root.home\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// use object to pass params/query</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>to<span class=\"token punctuation\">:</span> <span class=\"token string\">\"root.users.byId\"</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>userId<span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>clone<span class=\"token punctuation\">:</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// path is also allowed here</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>to<span class=\"token punctuation\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>This method:</p>\n<ul>\n<li>returns a promise of <code>ITransition</code> if everything is ok.</li>\n<li>returns a promise of <code>undefined</code> if transition has been aborted.</li>\n<li>throws an exception if transition has failed.</li>\n</ul>\n<h3 id=\"context\">Context</h3>\n<p>Current context is re-used. Some params can be omitted based on the relative position.</p>","name":"go","parameters":[{"description":"","name":"to","optional":false,"type":"string | IHrefQuery"}],"returnDescription":"any","returnType":"Promise<ITransition | undefined>","static":false,"accessor":false},{"description":"<p>Get the path of a route node. Interface is like Router#go().</p>","name":"href","parameters":[{"description":"<p>Path/NodeName/RouteName</p>","name":"query","optional":false,"type":"string | IHrefQuery"}],"returnDescription":"any","returnType":"string | undefined","static":false,"accessor":false},{"description":"<p>Check if a route node is active. Interface is like Router#go().</p>\n<h3 id=\"strict\">Strict</h3>\n<p>Set strict=true to make a STRICT comparaison.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// current = \"/abc\";</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">isActive</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">isActive</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/abc/def\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">isActive</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/abc/def\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre>","name":"isActive","parameters":[{"description":"<p>Path/NodeName/RouteName</p>","name":"routeName","optional":false,"type":"string | IHrefQuery"},{"default":"<p>false</p>","description":"<p>If true, check as STRICT EQUAL not CONTAINS</p>","name":"strict","optional":false,"type":"boolean"}],"returnDescription":"any","returnType":"boolean","static":false,"accessor":false},{"description":"<p>Like Router#go, with type=REPLACE.</p>","name":"redirect","parameters":[{"description":"","name":"to","optional":false,"type":"string | IHrefQuery"}],"returnDescription":"","returnType":"Promise<ITransition | undefined>","static":false,"accessor":false},{"description":"<p>Remove layers and go to the current path as REPLACE.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">router<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"reload","parameters":[],"returnDescription":"any","returnType":"Promise<ITransition | undefined>","static":false,"accessor":false},{"description":"<p>Getter/Setter query param.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">router<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// getter</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// setter</span></code></pre><h3 id=\"reload\">Reload</h3>\n<p>This will not reload the page.</p>","name":"search","parameters":[{"description":"","name":"key","optional":false,"type":"string"},{"description":"","name":"value","optional":false,"type":"any"}],"returnDescription":"","returnType":"string | undefined","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"Router"},{"path":"/server/providers/ReactServerProvider.ts","description":"","methods":[{"description":"<p>Get the react app prefix.</p>","name":"hostname","parameters":[],"returnDescription":"any","returnType":"string","static":false,"accessor":true},{"description":"<p>This is useless if you use ReactStatic or ReactProxy.</p>","name":"generateIndex","parameters":[{"description":"","name":"prefix","optional":false,"type":"string"},{"description":"","name":"mountId","optional":false,"type":"string"}],"returnDescription":"any","returnType":"string","static":false,"accessor":false},{"description":"<p>Hook - start</p>","name":"onStart","parameters":[{"description":"<p>Kernel dependencies</p>","name":"deps","optional":false,"type":"IDeclarations"}],"returnDescription":"any","returnType":"Promise<void>","static":false,"accessor":false},{"description":"<p>Make the react rendering.</p>","name":"render","parameters":[{"description":"<p>IKoaContext</p>","name":"ctx","optional":false,"type":"IKoaContext"},{"description":"<p>index.html</p>","name":"template","optional":false,"type":"string"}],"returnDescription":"any","returnType":"string","static":false,"accessor":false},{"description":"<p>In very few cases, SSR can failed.</p>","name":"renderError","parameters":[{"description":"<p>Koa Context with Kernel</p>","name":"ctx","optional":false,"type":"IKoaContext"},{"description":"<p>App template with styles + scripts</p>","name":"template","optional":false,"type":"string"},{"description":"<p>The holy error</p>","name":"error","optional":false,"type":"Error"}],"returnDescription":"","returnType":"string","static":false,"accessor":false},{"description":"","name":"renderHelmet","parameters":[{"description":"","name":"$","optional":false,"type":"CheerioStatic"},{"description":"","name":"ctx","optional":false,"type":"IKoaContext"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"","name":"renderPixie","parameters":[{"description":"","name":"$","optional":false,"type":"CheerioStatic"},{"description":"","name":"ctx","optional":false,"type":"IKoaContext"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"","name":"renderReact","parameters":[{"description":"","name":"$","optional":false,"type":"CheerioStatic"},{"description":"","name":"ctx","optional":false,"type":"IKoaContext"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"","name":"rootElement","parameters":[{"description":"","name":"kernel","optional":false,"type":"Kernel"}],"returnDescription":"any","returnType":"Element","static":false,"accessor":false},{"description":"<p>Mount a koa middleware on the react-server way.</p>","name":"use","parameters":[{"description":"<p>Koa Middleware</p>","name":"middleware","optional":false,"type":"IKoaMiddleware"}],"returnDescription":"any","returnType":"ReactServerProvider","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ReactServerProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-react\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"ReactServerProvider"}]},{"version":"1.1.0","type":"server","decorators":[{"path":"/core/decorators/body.ts","description":"<p>Extract <code>request.body</code> from IKoaContext and convert value to the given type.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@body</span> data<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Ctrl<span class=\"token punctuation\">,</span> ApiProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"json-validation\">Json Validation</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@field</span> username<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@field</span> password<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@body</span> data<span class=\"token punctuation\">:</span> Data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// throw ValidationException if not valid.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"body","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> body <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/core/decorators/del.ts","description":"<p>Create a DEL route.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@del</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">{</span>ok<span class=\"token punctuation\">:</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Ctrl<span class=\"token punctuation\">,</span> ApiProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"del","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> del <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/core/decorators/file.ts","description":"<p>Extract <code>ctx.req[file]</code> from KoaContext with <a href=\"https://github.com/koa-modules/multer\">multer</a> <em>(multipart/form-data)</em>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IUploadedFile <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">something</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@file</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">)</span> file<span class=\"token punctuation\">:</span> IUploadedFile<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    file<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Ctrl<span class=\"token punctuation\">,</span> ApiProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"file","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> file <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/core/decorators/get.ts","description":"<p>Create a GET route.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">{</span>ok<span class=\"token punctuation\">:</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Ctrl<span class=\"token punctuation\">,</span> ApiProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"get","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> get <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/core/decorators/header.ts","description":"<p>Extract <code>ctx.header[name]</code> from KoaContext and convert value to the given type.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">something</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@header</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span> name<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"header","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> header <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/core/decorators/param.ts","description":"<p>Extract  <code>ctx.params[name]</code> from KoaContext and convert value to the given type..</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/:id\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">something</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> myId<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"param","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> param <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/core/decorators/post.ts","description":"<p>Create a POST route.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">{</span>ok<span class=\"token punctuation\">:</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Ctrl<span class=\"token punctuation\">,</span> ApiProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"post","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> post <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/core/decorators/put.ts","description":"<p>Create a PUT route.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">{</span>ok<span class=\"token punctuation\">:</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Ctrl<span class=\"token punctuation\">,</span> ApiProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","name":"put","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> put <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/core/decorators/query.ts","description":"<p>Extract <code>ctx.query[name]</code> from KoaContext and convert value to the given type.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">something</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span> name<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Ctrl<span class=\"token punctuation\">,</span> ApiProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"boolean\">Boolean</h3>\n<p>Behavior is different from the other.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Api</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bool\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">something</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"showAll\"</span><span class=\"token punctuation\">)</span> showAll<span class=\"token punctuation\">:</span><span class=\"token keyword\"> boolean</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// showAll === true when /bool?showAll</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"query","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> query <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/core/decorators/router.ts","description":"<p>Prefix all routes of a class.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token annotation punctuation\">@router</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/a\"</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/b\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">:</span> IKoaContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"router","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> router <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]},{"path":"/core/decorators/use.ts","description":"<p>Use a middleware.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token annotation punctuation\">@use</span><span class=\"token punctuation\">(</span>aMiddlewareForAllRoutes<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@router</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Ctrl</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@use</span><span class=\"token punctuation\">(</span>aMiddlewareForThisRoute<span class=\"token punctuation\">)</span>\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">findUsers</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">:</span> IKoaContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"use","install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> use <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","parameters":[]}],"interfaces":[],"components":[],"exceptions":[],"manuals":[{"path":"docs/Koa.md","name":"Koa","content":"<h1 id=\"koa\">Koa</h1>\n<p>o<em>l</em>y is just a wrapper of <a href=\"http://koajs.com/\">Koa</a>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> ApiProvider<span class=\"token punctuation\">,</span> get <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> IKoaContext<span class=\"token punctuation\">,</span> IKoaMiddleware <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-http\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nconst</span> koaMiddleware<span class=\"token punctuation\">:</span> IKoaMiddleware <span class=\"token operator\">=</span><span class=\"token keyword\"> async</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\"> await</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nexport</span><span class=\"token keyword\"> class</span> <span class=\"token class-name\">Api</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">root</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">:</span> IKoaContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Api<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=></span> k\n    <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>ApiProvider<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>koaMiddleware<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"default-middlewares\">Default middlewares</h2>\n<p>ApiProvider uses:</p>\n<ul>\n<li>koa-bodyparser (parse http body) <a href=\"https://github.com/koajs/bodyparser\">https://github.com/koajs/bodyparser</a> </li>\n<li>koa-router     (@get, @post, @put, ...) <a href=\"https://github.com/alexmingoia/koa-router\">https://github.com/alexmingoia/koa-router</a> </li>\n<li>a custom errorHandler (ApiMiddlewares#errorHandler())</li>\n<li>a custom request logger (ApiMiddlewares#log())</li>\n</ul>"},{"path":"docs/Context.md","name":"Context","content":"<h1 id=\"context\">Context</h1>\n<p>Kernel#fork() is called before each request.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> inject<span class=\"token punctuation\">,</span> Kernel<span class=\"token punctuation\">,</span> Logger<span class=\"token punctuation\">,</span> state <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> ApiProvider<span class=\"token punctuation\">,</span> get <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nexport</span><span class=\"token keyword\"> class</span> <span class=\"token class-name\">Controller</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@inject</span> logger<span class=\"token punctuation\">:</span> Logger<span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@inject</span> kernel<span class=\"token punctuation\">:</span> Kernel<span class=\"token punctuation\">;</span>\n\n  a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// this is scope-request</span>\n  <span class=\"token annotation punctuation\">@state</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this is scope-application</span>\n\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">root</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    ctx<span class=\"token punctuation\">.</span>kernel <span class=\"token operator\">===</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>kernel<span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>b <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\"> const</span> response <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      a<span class=\"token punctuation\">:</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// always 1 </span>\n      b<span class=\"token punctuation\">:</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 1, 2, 3, ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// logger shows context id </span>\n    <span class=\"token comment\">// [data] (contextId) : message</span>\n   <span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\"> return</span> response<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>ApiProvider<span class=\"token punctuation\">,</span> Controller<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>"}],"env":[{"default":"\"/api\"","description":"<p>Define a global namespace to your path api.</p>","name":"API_PREFIX","optional":true,"target":"ApiProvider","type":"string"},{"default":" Global.isProduction()","description":"<p>Hide cause of HttpServerException.</p>","name":"API_ERROR_HIDE_CAUSE","optional":true,"target":"ApiMiddlewares","type":"boolean"}],"home":"<h1 id=\"oly-api\">o<em>l</em>y api</h1>\n<p>REST API with koa and decorators.</p>\n<p>o<em>l</em>y api is a module of the <a href=\"https://nolyme.github.io/oly\">o<em>l</em>y project</a>.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> inject<span class=\"token punctuation\">,</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> ApiProvider<span class=\"token punctuation\">,</span> get <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Repo</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">query</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">Api</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@inject</span> repo<span class=\"token punctuation\">:</span> Repo<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users\"</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword\"> async</span> <span class=\"token function\">findUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span><span class=\"token keyword\"> await</span><span class=\"token keyword\"> this</span><span class=\"token punctuation\">.</span>repo<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    HTTP_SERVER_PORT<span class=\"token punctuation\">:</span> <span class=\"token number\">6000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>Api<span class=\"token punctuation\">,</span> ApiProvider<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// curl http://localhost:6000/api/users -> [1,2,3]</span></code></pre><h2 id=\"installation\">Installation</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> oly oly-api</code></pre>","name":"oly-api","services":[{"path":"/core/providers/ApiProvider.ts","description":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">root</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">:</span> IKoaContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span> <span class=\"token punctuation\">{</span>ok<span class=\"token punctuation\">:</span><span class=\"token keyword\"> true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// same as ctx.body = {ok: true}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>ApiProvider<span class=\"token punctuation\">,</span> App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"override\">Override</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span><span class=\"token keyword\"> class</span> <span class=\"token class-name\">MyApiProvider</span><span class=\"token keyword\"> extends</span> <span class=\"token class-name\">ApiProvider</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// #useMulter() {}</span>\n  <span class=\"token comment\">// #useBodyParser() {}</span>\n  <span class=\"token comment\">// #createKoaRouter() {}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>ApiProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","methods":[{"description":"<p>Get current hostname based on configuration.\nApi prefix is included.</p>","name":"hostname","parameters":[],"returnDescription":"any","returnType":"string","static":false,"accessor":true},{"description":"<p>Mount a middleware on prefix. (&#39;/&#39;, &#39;/wat&#39;, ...)</p>","name":"mount","parameters":[{"description":"","name":"prefix","optional":false,"type":"string"},{"description":"","name":"middleware","optional":false,"type":"IKoaMiddleware"}],"returnDescription":"any","returnType":"this","static":false,"accessor":false},{"description":"<p>Hook - start</p>","name":"onStart","parameters":[{"description":"","name":"declarations","optional":false,"type":"IDeclarations"}],"returnDescription":"any","returnType":"Promise<void>","static":false,"accessor":false},{"description":"<p>Transform controller to KoaRouter and push it to Koa.</p>","name":"register","parameters":[{"description":"<p>Class with Router Metadata</p>","name":"definition","optional":false,"type":"Class"}],"returnDescription":"any","returnType":"this","static":false,"accessor":false},{"description":"<p>Auto create controllers.</p>","name":"scan","parameters":[{"description":"<p>List of declaration (kernel dependencies)</p>","name":"declarations","optional":false,"type":"IDeclarations"}],"returnDescription":"any","returnType":"void","static":false,"accessor":false},{"description":"<p>Use a koa middleware.</p>","name":"use","parameters":[{"description":"","name":"middleware","optional":false,"type":"IKoaMiddleware"}],"returnDescription":"any","returnType":"this","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApiProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"ApiProvider"},{"path":"/core/services/ApiMiddlewares.ts","description":"<p>Collection of internal middlewares.<br/></p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApiMiddlewares</span><span class=\"token keyword\"> extends</span> <span class=\"token class-name\">ApiMiddlewares</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// override errorHandler</span>\n  <span class=\"token function\">errorHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\"> return</span><span class=\"token keyword\"> async</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\"> await</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// also accepted</span>\n  <span class=\"token function-variable function\">log</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> yourLoggerMiddleware<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>provide<span class=\"token punctuation\">:</span> ApiMiddlewares<span class=\"token punctuation\">,</span> use<span class=\"token punctuation\">:</span> MyApiMiddlewares<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","methods":[{"description":"<p>Basic error handler.</p>","name":"errorHandler","parameters":[],"returnDescription":"any","returnType":"IKoaMiddleware","static":false,"accessor":false},{"description":"<p>Instantiate a class with the kernel context.\nRun a specific action and handle response properly.\nThis middleware should be the last middleware on the stack.</p>","name":"invoke","parameters":[{"description":"<p>Definition of the controller</p>","name":"definition","optional":false,"type":"Class"},{"description":"<p>Name of the method to run</p>","name":"propertyKey","optional":false,"type":"string"}],"returnDescription":"any","returnType":"IKoaMiddleware","static":false,"accessor":false}],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApiMiddlewares <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"ApiMiddlewares"},{"path":"/swagger/providers/SwaggerProvider.ts","description":"<p>Generate a <a href=\"https://swagger.io/\">Swagger</a> spec and UI. Experimental.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@field</span> name<span class=\"token punctuation\">:</span><span class=\"token keyword\"> string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">\nclass</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">createData</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@body</span> data<span class=\"token punctuation\">:</span> Data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nKernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>SwaggerProvider<span class=\"token punctuation\">,</span> App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"paths\">Paths</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># &lt;API_PREFIX>/swagger.json</span>\n<span class=\"token comment\"># &lt;API_PREFIX>/swagger/ui</span></code></pre><h3 id=\"supported\">Supported</h3>\n<ul>\n<li>Definitions</li>\n<li>Paths</li>\n</ul>","methods":[],"install":"<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SwaggerProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span></code></pre>","name":"SwaggerProvider"}]},{"version":"1.1.0","type":"dev","decorators":[],"interfaces":[],"components":[],"exceptions":[],"manuals":[{"path":"docs/TypeScript.md","name":"TypeScript","content":"<h3 id=\"install\">Install</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> oly\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -D typescript</code></pre><h3 id=\"config\">Config</h3>\n<p>/tsconfig.json</p>\n<p><a href=\"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html\">https://www.typescriptlang.org/docs/handbook/tsconfig-json.html</a> </p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\n    // oly requirements\n    <span class=\"token property\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"emitDecoratorMetadata\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"es2015.promise\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"dom\"</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"node_modules\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>"},{"path":"docs/Webpack.md","name":"Webpack","content":"<h3 id=\"configuration\">Configuration</h3>\n<p>An easy way to bundle webapps for all browsers is <a href=\"https://webpack.js.org\">Webpack</a>.</p>\n<p>oly-tools has a custom &quot;preset&quot; for TypeScript webapps.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createConfiguration<span class=\"token punctuation\">,</span> loaders <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"oly-tools\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nmodule</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n <span class=\"token keyword\"> const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">createConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n    env<span class=\"token punctuation\">,</span>\n\n    entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"oly/polyfill\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"./src/main.browser.ts\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    assets<span class=\"token punctuation\">:</span> <span class=\"token string\">\"./src/web/assets\"</span><span class=\"token punctuation\">,</span>\n\n    template<span class=\"token punctuation\">:</span> <span class=\"token string\">\"./src/web/index.html\"</span><span class=\"token punctuation\">,</span>\n\n    styleLoader<span class=\"token punctuation\">:</span> loaders<span class=\"token punctuation\">.</span><span class=\"token function\">sassLoaderFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    sourceMaps<span class=\"token punctuation\">:</span><span class=\"token keyword\"> false</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\"> return</span> config<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><p>/src/main.browser.ts</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>After that, we can build an app like that:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ webpack --env.NODE_ENV<span class=\"token operator\">=</span>production --env.LOGGER_LEVEL<span class=\"token operator\">=</span>ERROR</code></pre>"},{"path":"docs/Jest.md","name":"Jest","content":"<h1 id=\"jest\">Jest</h1>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -D jest @types/jest ts-jest</code></pre><h2 id=\"config\">Config</h2>\n<p>See <a href=\"https://github.com/facebook/jest\">jest</a> and <a href=\"https://github.com/kulshekhar/ts-jest\">ts-jest</a>.</p>\n<h2 id=\"example\">Example</h2>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// Kernel.create() will:</span>\n  <span class=\"token comment\">// - run Kernel#start() during beforeAll()</span>\n  <span class=\"token comment\">// - run Kernel#stop() during afterAll()</span>\n  <span class=\"token comment\">// - set logger level to ERROR by default</span>\n\n <span class=\"token keyword\"> const</span> k <span class=\"token operator\">=</span> Kernel<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// inject regular service</span>\n <span class=\"token keyword\"> const</span> s <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">inject</span><span class=\"token punctuation\">(</span>Service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should be ok\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>"},{"path":"docs/Docker.md","name":"Docker","content":"<h3 id=\"example\">Example</h3>\n<p>/src/main.ts</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Kernel <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> ApiProvider <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-api\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">\nimport</span> <span class=\"token punctuation\">{</span> Ctrl <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"./Ctrl\"</span><span class=\"token punctuation\">;</span>\n\nKernel\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span>ApiProvider<span class=\"token punctuation\">,</span> Ctrl<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"config\">Config</h3>\n<p>/Dockerfile</p>\n<pre class=\"language-docker\"><code class=\"language-docker\"><span class=\"token comment\"># CONTAINER</span>\n<span class=\"token keyword\">FROM</span> node<span class=\"token punctuation\">:</span>8.1<span class=\"token punctuation\">-</span>alpine\n<span class=\"token keyword\">RUN</span> mkdir <span class=\"token punctuation\">-</span>p /app\n<span class=\"token keyword\">WORKDIR</span> /app\n\n<span class=\"token comment\"># DEPENDENCIES</span>\n<span class=\"token keyword\">COPY</span> package.json yarn.lock /app/\n<span class=\"token keyword\">RUN</span> yarn <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>prod\n\n<span class=\"token comment\"># SOURCES</span>\n<span class=\"token keyword\">COPY</span> lib /app/lib/\n<span class=\"token keyword\">COPY</span> www /app/www/\n\n<span class=\"token comment\"># CONFIGURATION</span>\n<span class=\"token keyword\">ENV</span> NODE_ENV=production\n<span class=\"token keyword\">ENV</span> HTTP_SERVER_HOST=0.0.0.0\n<span class=\"token keyword\">ENV</span> HTTP_SERVER_PORT=3000\n\n<span class=\"token comment\"># RUN</span>\n<span class=\"token keyword\">EXPOSE</span> 3000\n<span class=\"token keyword\">CMD</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"npm\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span> <span class=\"token punctuation\">]</span></code></pre>"}],"env":[],"home":"<h1 id=\"oly-tools\">o<em>l</em>y tools</h1>\n<p>o<em>l</em>y tools is a module of the <a href=\"https://nolyme.github.io/oly\">o<em>l</em>y project</a>.</p>\n<p>Webpack helpers that are perfect for lazy people.</p>\n<h3 id=\"installation\">Installation</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -D oly-tools webpack ts-node typescript</code></pre><h3 id=\"webpack\">Webpack</h3>\n<p>/webpack.config.ts</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createConfiguration <span class=\"token punctuation\">}</span><span class=\"token keyword\"> from</span> <span class=\"token string\">\"oly-tools\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">\nexport</span><span class=\"token keyword\"> default</span> <span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n <span class=\"token keyword\"> const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">createConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    env<span class=\"token punctuation\">,</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/main.ts\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\"> return</span> config<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>","name":"oly-tools","services":[]}],"name":"oly","version":""};